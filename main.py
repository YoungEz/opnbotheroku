import discord, time, datetime
from discord.ext import commands
from discord.ext.commands import Bot
from discord.utils import get
import asyncio
import nekos
import time
import colorsys
import sys
import subprocess
from pymongo import MongoClient
import os
import pymongo
import json
import traceback
import requests
import datetime
import random
from matematica import taxa

from random import choice

prefix = ["d!" , "D!"]

bot = commands.Bot(prefix, owner_id=497518244165320734)

bot.remove_command("help")
bot.launch_time = datetime.datetime.utcnow()
url = os.environ.get('URL')
mongo = MongoClient(url)
print('Carregando Extens√µes')
startup_extensions = ["cogs.music", "cogs.newmember"]
n = "Motivo n√£o definido"

class Main_Commands():
    def __init__(self, bot):
        self.bot = bot



@bot.event
async def on_ready():
    print("=================================")
    print("Nome: %s" % bot.user.name)
    print("ID: %s" % bot.user.id)
    print("=================================")
    while True:
        delta_uptime = datetime.datetime.utcnow() - bot.launch_time
        hours, remainder = divmod(int(delta_uptime.total_seconds()), 3600)
        minutes, seconds = divmod(remainder, 60)
        days, hours = divmod(hours, 24)
        await bot.change_presence(activity=discord.Activity(type=discord.ActivityType.streaming, name=f"AIDS para {str(len(set(bot.get_all_members())))} Membros"))



if __name__ == "__main__":
    for extension in startup_extensions:
        try:
            bot.load_extension(extension)
        except Exception as e:
            exc = '{}.{}'.format(type(e).__name__, e)
            print('falha ao carregar extensoes {} . {}'.format(extension, e))
            print(repr(e))
            
@bot.command(pass_context=True, aliases=['latency', 'pong'])
@commands.cooldown(1, 5.0, commands.BucketType.user)
async def ping(ctx):
    '''Find the response time in milliseconds.\n`latency` `pong`'''
    ptime = time.time()
    embed = discord.Embed(Title='Ping', color=0x00FF00)
    embed.add_field(name='Pong!', value='Calculando...')
    embed.set_author(name=f'{ctx.message.author.display_name}', icon_url=f'{ctx.message.author.avatar_url}')
    ping3 = await ctx.send(embed=embed)
    ping2 = time.time() - ptime
    ping1 = discord.Embed(Title='Ping', color=0x00FF00)
    ping1.add_field(name='Pong!', value=f"üíª **Bot** `{int((round(ping2 * 1000)))} ms.`\n üì° **API** `{int(bot.latency  * 1000)} ms`")
    ping1.set_author(name=f'{ctx.message.author.display_name}', icon_url=f'{ctx.message.author.avatar_url}')
    await ping3.edit(embed=ping1)           
  
    
 
 
 
@bot.command(pass_context=True, aliases=['bi'])
@commands.cooldown(1, 5.0, commands.BucketType.user)
async def botinfo(ctx):
	embed = discord.Embed(color=0x00ffba)
	delta_uptime = datetime.datetime.utcnow() - bot.launch_time
	hours, remainder = divmod(int(delta_uptime.total_seconds()), 3600)
	minutes, seconds = divmod(remainder, 60)
	days, hours = divmod(hours, 24)	
	embed.add_field(name="**=====Principais Informa√ß√µes=====**", value=f"üìÜ **Criado Em:** `17:02 2/07/19`\n<:programador:582173369722601522> **Criador:** {ctx.guild.owner} \n<:programando:582173138448547843> **Linguagem Usada:** Python\n<a:discordlove:582176157609492490> **Vers√£o Discord.py:** {discord.__version__}\n‚ùì **Prefixo:** `kn!`\n<:uptime:582708017049632768> **Estou Online H√°: **`{days}` **Dias** `{hours}` **Horas** `{minutes}` **Minutos** `{seconds}` **Segundos**")

	await ctx.send(embed=embed) 
 
@bot.command(pass_context=True)
@commands.cooldown(1, 5.0, commands.BucketType.user)
async def setcargo(ctx, role: discord.Role=None, member: discord.Member=None, *, motivo: str=None):
    if not member:
    	return await ctx.send('{} Voc√™ n√£o especificou o usu√°rio.'.format(ctx.message.author.mention))

    	return await ctx.send(embed=rcat)
  
    if not role:
        await ctx.send('{} Voc√™ Precisa Mencionar Um Cargo Para Adicionar'.format(ctx.message.author.mention))
    else:
        await member.add_roles(role)
    embed = discord.Embed(title='A√ß√£o | Adicionar Cargo', color=0xff0000)
    embed.add_field(name='üëÆ Autor', value=ctx.message.author)
    embed.add_field(name='üíª Id', value=ctx.message.author.id)
    embed.add_field(name='üë• Usu√°rio', value=member)
    embed.add_field(name='üíª Id', value=member.id)
    
    await ctx.send(embed=embed)

  	


@bot.command(pass_context=True)
@commands.cooldown(1, 5.0, commands.BucketType.user)
async def removercargo(ctx, role: discord.Role=None, member: discord.Member=None, *, motivo: str=None):
    if not member:
    	return await ctx.send('{} Voc√™ n√£o especificou o usu√°rio.'.format(ctx.message.author.mention))

    	return await ctx.send(embed=rcat)
    if not role:
        await ctx.send('{} Voc√™ Precisa Mencionar Um Cargo Para Remover'.format(ctx.message.author.mention))
    else:
        await member.remove_roles(role)
    embed = discord.Embed(title='A√ß√£o | Remover Cargo', color=0xff0000)
    embed.add_field(name='üëÆ Autor', value=ctx.message.author)
    embed.add_field(name='üíª Id', value=ctx.message.author.id)
    embed.add_field(name='üë• Usu√°rio', value=member)
    embed.add_field(name='üíª Id', value=member.id)
      
    await ctx.send(embed=embed) 
@bot.command(pass_context = True)

@commands.cooldown(1, 5.0, commands.BucketType.user)
async def kick(ctx, user: discord.User=None, *, motivo: str = None):
    motivo = motivo or n
    if not user:
        return await ctx.send('{} Voc√™ n√£o especificou o usu√°rio. Exemplo: ``d!kick <@usu√°rio> <motivo>``'.format(ctx.message.author.mention))
    if not ctx.author.guild_permissions.kick_members:
    	rcat = discord.Embed(title='Erro', description='Voc√™ N√£o Tem Permiss√£o Para Executar Esse Comando.', color=0xFF0000)
    	rcat.set_author(name=f'{ctx.message.author.display_name}', icon_url=f'{ctx.message.author.avatar_url}')
    	return await ctx.send(embed=rcat)        
    else:
        await ctx.guild.kick(user)
        embed = discord.Embed(title='A√ß√£o | Kick!', description='{} usu√°rio expulso com sucesso'.format(ctx.message.author.mention), color=0xff0Ab)
        embed.add_field(name='üëÆ Autor', value=ctx.message.author)
        embed.add_field(name='üë• usu√°rio', value=user)
        embed.add_field(name='üíª Id', value=user.id)
        embed.add_field(name='üìù Motivo', value=motivo)
        embed.set_footer(text='Autor do comando: {}| Demon Bot ‚òÖ'.format(ctx.message.author.name))
        await ctx.send(embed=embed)
        embedpv = discord.Embed(title='A√ß√£o | Kick'.format(ctx.message.author.mention), color=0xff0Ab)
        embedpv.add_field(name='üëÆ Executor', value=ctx.message.author)
        embedpv.add_field(name='üíª Servidor', value=ctx.message.guild.name)
        embedpv.add_field(name='üíª id', value=ctx.message.author.id)
        embedpv.add_field(name='üìù Motivo', value=motivo)
        embedpv.set_thumbnail(url=ctx.message.guild.icon_url)
        await user.send(embed=embedpv)
        

	


@bot.listen("on_command_error")
async def error_handler(ctx, error):
    error = getattr(error, 'original', error)
    cmd_name = ctx.message.content.split()[0]  #pegar nome do cmd com prefixo

    if isinstance(error, commands.CommandOnCooldown):
        s = error.retry_after
        s = round(s, 2)
        h, r = divmod(int(s), 3600)
        m, s = divmod(r, 60)
        return await ctx.send(
            f'{ctx.author.mention} Voc√™ ter√° que aguardar **{str(h) + "h: " if h != 0 else ""}{str(m) + "m: " if m != 0 else ""}{str(s) + "s" if s != 0 else ""}** para usar este comando novamente.')

    if isinstance(error, commands.MissingPermissions):
        perms = "\n".join(error.missing_perms)
        return await ctx.send(f"{ctx.message.author.mention} Voc√™ precisa das permiss√µes:\n{perms}\n para usar esse comando").replace('kick_members', 'Expulsar membros').replace('ban_members', 'Banir membros')

    if isinstance(error, commands.BotMissingPermissions):
        perms = "\n".join(error.missing_perms)
        return await ctx.send(f"N√£o tenho as seguintes permiss√µes:\n{perms}")

    if isinstance(error, commands.CommandNotFound):
        return await ctx.send(f"{ctx.message.author.mention} O comando `{cmd_name}` n√£o foi encontrado em meu sistema. para ver meus comandos digite `d!ajuda`.")



    # Demais erros v√£o aparecer apenas no console
    traceback.print_exception(type(error), error, error.__traceback__, file=sys.stderr)
    
@bot.command(pass_context=True)
async def google(ctx, *, message: str = None):
        try:
            if message is None:
                await ctx.send("Voc√™ precisa pesquisar algo! `d!google [pesquisa]`")
            else:
                words = f'https://www.google.com/search?q={message}'.replace(' ', '+')
                search = discord.Embed(title='Pesquisa realizada com sucesso!', description='**Resultado da pesquisa no Google:**', colour=0xff0000, timestamp=datetime.datetime.utcnow())
                search.add_field(name='------------------------------------------------', value=('‚û° [RESULTADO](' + words) + ')\n')
                search.set_footer(text='Comando usado pelo(a) {}'.format(ctx.author.name), icon_url=ctx.author.avatar_url)
                await ctx.send(embed=search)
        except Exception as e:
            await ctx.send(f"[ERROR]: {e}")                 
                       
@bot.command(pass_context=True)
async def i(ctx, cargo: discord.Role):
	await ctx.send(f'{cargo.id}')	
	
@bot.command(pass_context=True, aliases=['tm', 'tempm', 'tmute'])
async def tempmute(ctx, user: discord.Member, temp: int=None):
	role = discord.utils.find(lambda r: r.name == "üëÆ | Moderador",ctx.author.guild.roles)
		
	if role in ctx.author.roles:
		mt = ctx.guild.get_role(589047230606999553)
		await user.add_roles(mt)		
		s = temp
		s = round(s, 2)
		h, r = divmod(int(s), 3600)
		m, s = divmod(r, 60)
		return await ctx.send(f'{ctx.author.mention} Voc√™ silenciou {user.mention} por **{str(h) + "h: " if h != 0 else ""}{str(m) + "m: " if m != 0 else ""}{str(s) + "s" if s != 0 else ""}** com sucesso!')
		await asyncio.sleep(temp)
		await user.remove_roles(mt)
		await user.send('Voc√™ aprendeu a falar novamente!')
		
	else:
		await ctx.send(f'{ctx.author.mention} Voc√™ precisa do cargo {role.name} para poder usar esse comando')
           
@bot.command(pass_context=True,aliases=['ajuda','h'])
async def help(ctx):
	member = ctx.message.author
	help_p = discord.Embed(color=0xff00AB)
	help_p.add_field(name="Reaja Para Escolher Uma Categoria", value="üëÆ **Modera√ß√£o**\n‚Ä¢ comandos como `ban, kick...`\n‚Ñπ **Informa√ß√µes**\n‚Ä¢ comandos como `ping, avatar...`\nüöÄ **Outros**\n‚Ä¢ comandos como `pergunta, google...``")
	help_p.set_image(url = 'https://image.ibb.co/caM2BK/help.gif')	
	msg = await member.send(embed=help_p)
	await msg.add_reaction('üëÆ')
	await msg.add_reaction('‚ú®')
	await msg.add_reaction('‚Ñπ')
	await msg.add_reaction('üöÄ')

	
	await ctx.send(f'{member.mention} Verifique Suas Mensagens Privadas.')
	try:
		while True:
			reaction, user = await bot.wait_for("reaction_add", timeout=360, check=lambda reaction, user: reaction.message.id == msg.id and user.id == ctx.author.id)
			emoji = str(reaction.emoji)
			if emoji == 'üëÆ':
				await msg.delete()
				embed_help = discord.Embed(description="üìô‚îÉMenu de ajuda Modera√ß√£o")
				embed_help.add_field(name = 'ban ',value ='Como usar ``d!ban <@usu√°rio> [motivo]`` - bane o usu√°rio mencionado',inline = False)
				embed_help.add_field(name = 'kick',value ='Como usar ``d!kick <@usu√°rio> [motivo]`` - Expulsa o usu√°rio mencionado',inline = False)
				embed_help.add_field(name = 'setcargo',value ='Como usar ``d!setcargo <@cargo> <@usu√°rio>`` - seta um cargo algo usu√°rio mencionado',inline = False)
				embed_help.add_field(name = 'lock',value ='Como usar ``d!lock`` - bloqueia o canal para membros',inline = False)
				embed_help.add_field(name = 'unlock',value ='Como usar ``d!unlock`` - desbloqueia o canal para membros',inline = False)
				embed_help.add_field(name = 'mute',value ='Como usar ``d!mute <@usu√°rio> [motivo]`` - Muta o usu√°rio mencionado **DESATIVADO**',inline = False)
				embed_help.add_field(name = 'unmute',value ='Como usar ``d!unmute <@usu√°rio>`` - Desmuta o usu√°rio mencionado **DESATIVADO**',inline = False)	
				embed_help.add_field(name = 'removercargo',value ='Como usar ``d!removercargo <@cargo> <@usu√°rio>`` - remove um cargo algo usu√°rio mencionado',inline = False)
				embed_help.add_field(name = 'clear',value ='Como usar ``d!clear <quantidade>`` - limpa o canal de texto atual',inline = False)
				embed_help.add_field(name = 'avisar',value ='Como usar ``d!avisar <@usu√°rio> [motivo]`` - avisa uma pessoa sobre algo',inline = False)								
				embed_help.set_image(url = 'https://image.ibb.co/caM2BK/help.gif')
				embed_help.add_field(name='-----------------------', value='***<arg> obrigatorio\n[arg] opicional***')												
				msg = await member.send(embed=embed_help)
				await msg.add_reaction('‚¨Ö')
			if emoji == '‚ú®':
				await msg.delete()
				embed_help = discord.Embed(description="üìô‚îÉMenu de ajuda A√ß√µes", color = 0xff00AA)
				embed_help.add_field(name = 'dance ',value ='Como usar ``s!dance`` - dance com algum usu√°rio',inline = False)
				embed_help.add_field(name = 'kiss',value ='Como usar ``s!kiss <@usu√°rio>`` - O amor esta no ar! beije determinado usu√°rio!',inline = False)
				embed_help.add_field(name = 'hug ',value ='Como usar ``s!hug <@usu√°rio>``',inline = False)
				embed_help.add_field(name = 'suicidio ',value ='Como usar ``s!suicidio``',inline = False)
				embed_help.add_field(name = 'matar',value ='Como usar ``s!matar <@usu√°rio>``',inline = False)
				embed_help.add_field(name = 'slap',value ='Como usar ``s!slap <@usu√°rio>`` -  de uns tap cabuloso em alguem que esta te pertubando',inline = False)
				embed_help.add_field(name = 'chorar ',value ='Como usar ``s!chorar``',inline = False)
				embed_help.add_field(name = 'atack',value ='Como usar ``s!atack <@usu√°rio> - ataque o usu√°rio mencionado``',inline = False)
				embed_help.add_field(name = 'brigar',value ='Como usar ``s!brigar <@usu√°rio>`` - brigue com seu amiguinho (n√£o fa√ßa isso)',inline = False)
				embed_help.add_field(name = 'voadora',value ='Como usar ``s!voadora <@usu√°rio>`` - de uma voadora no seu amiguinho (n√£o fa√ßa isso)',inline = False)
				embed_help.add_field(name = 'meme',value ='Como usar ``d!meme`` - Mostra Um Meme',inline = False)															
				embed_help.set_image(url = 'https://image.ibb.co/caM2BK/help.gif')
				embed_help.add_field(name='-----------------------', value='***<arg> obrigatorio\n[arg] opicional***')				
				msg = await member.send(embed=embed_help)
				
				await msg.add_reaction('‚¨Ö')
			if emoji == '‚Ñπ':
				await msg.delete()
				embed_help = discord.Embed(description="üìô‚îÉMenu de ajuda Informa√ß√µes", color=0xff00ab)
				embed_help.add_field(name = 'serverinfo',value ='Como usar ``d!serverinfo`` - veja as informa√ß√µes do servidor atual',inline = False)
				embed_help.add_field(name = 'ping',value ='Como usar ``d!ping`` - Veja meu tempo de resposta',inline = False)
				embed_help.add_field(name = 'avatar',value ='Como usar ``d!avatar<@usu√°rio>`` - Veja O Avatar Do Usu√°rio Mencionado',inline = False)
				embed_help.add_field(name = 'ajuda ',value ='Como usar ``d!ajuda`` Meus comandos',inline = False)
				embed_help.add_field(name = 'userinfo',value ='Como usar ``d!userinfo [@usu√°rio]`` Expulsa o usu√°rio mencionado',inline = False)
	
				embed_help.add_field(name = 'google',value ='Como usar ``d!google <pesquisa>`` - Fa√ßa Uma Pesquisa',inline = False)
										
				embed_help.set_image(url = 'https://image.ibb.co/caM2BK/help.gif')
				embed_help.add_field(name='-----------------------', value='***<arg> obrigatorio\n[arg] opicional***')				
							
				msg = await member.send(embed=embed_help)
				await msg.add_reaction('‚¨Ö')
			if emoji == 'üöÄ':
				await msg.delete()
				embed_help = discord.Embed(description="üìô‚îÉMenu de ajuda", color=0xff00ab)
				embed_help.add_field(name = 'dog ',value ='Como usar ``d!dog`` - foto aleatoria de um dog√£o',inline = False)
				embed_help.add_field(name = 'cat',value ='Como usar ``d!cat`` - foto aleatoria de um gato',inline = False)
				embed_help.add_field(name = 'votar',value ='Como usar ``d!votar <mensagem>`` - Inicie uma vota√ß√£o em seu servidor',inline = False)				
				embed_help.add_field(name = 'flipcoin',value ='Como usar ``flipcoin`` - Cara Ou Coroa',inline = False)																					
				embed_help.add_field(name='-----------------------', value='***<arg> obrigatorio\n[arg] opicional***')				
				msg = await member.send(embed=embed_help)
				await msg.add_reaction('‚¨Ö')
			if emoji == 'üí∏':
					await msg.delete()
					embed_help = discord.Embed(description="üìô‚îÉMenu de Economia", color=0xff00ab)
					embed_help.add_field(name = 'pagar',value ='Como usar ``s!pagar <@usu√°rio> <valor>`` - pague o seu amigo(a) usando minha econimia :)',inline = False)
					embed_help.add_field(name = 'saldo',value ='Como usar ``s!saldo`` - Veja quantos **ryucoins** Voc√™ tem!',inline = False)
					embed_help.add_field(name = 'rep',value ='Como usar ``s!rep <@usu√°rio>`` - De um ponto de reputa√ß√£o a alguem',inline = False)
					embed_help.add_field(name = 'reps',value ='Como usar ``s!reps [@usu√°rio]`` - Veja quantos pontos de reputa√ß√£o voc√™ (ou seu amigo) tem!',inline = False)
					embed_help.add_field(name = 'daily',value ='Como usar ``s!daily`` - Pegue Uma Recompensa Diaria',inline = False)				
					embed_help.add_field(name = 'Trabalhar',value ='Como usar ``s!trabalhar` - Trabalhe e ganhe ryucoins!',inline = False)
					embed_help.add_field(name="perfil", value="Como Usar ``s!perfil [@usu√°rio]`` Veja seu perfil")
					embed_help.add_field(name="registro", value="Como Usar ``s!registro`` Registre-se em meu sistema")
					embed_help.add_field(name="frase", value="Como Usar ``s!frase <frase>`` Adicione Uma Frase A Seu Perfil")
					embed_help.add_field(name="sobre", value="Como Usar ``s!sobre <desc>` Adicione Uma Descri√ß√£o a seu perfil")
					embed_help.add_field(name="loja", value="Como Usar ``s!loja`` Veja Meu Shop **(Ainda N√£o Adicionado)**")
					embed_help.add_field(name="casar", value="Como Usar ``s!casar <@usu√°rio>`` Case com sua webnamorada! **(Ainda N√£o Adicionado)**")					
					embed_help.add_field(name='-----------------------', value='***<arg> obrigatorio\n[arg] opicional***')				
					msg = await member.send(embed=embed_help)
					await msg.add_reaction('‚¨Ö')							
			if emoji == '‚¨Ö':
				await msg.delete()
				msg = await member.send(embed=help_p)
				await msg.add_reaction('üëÆ')
				await msg.add_reaction('‚Ñπ')
				await msg.add_reaction('üöÄ')

	except asyncio.TimeoutError:
		await msg.delete() #deletar mensagem ap√≥s um tempo sem resposta dos reactions
	except Exception as e:
		await msg.delete()
		print(repr(e))	
		
@bot.command(pass_context=True)
async def dog(ctx):
    '''Check out a random cute or funny dog!'''
    r = requests.get('https://random.dog/woof.json')
    json = r.json()
    if r.status_code == 200:
        sdog = discord.Embed(title='Dog√£o', color=0x00FF00,timestamp = datetime.datetime.utcnow())
        sdog.set_author(name=f'{ctx.message.author.display_name}', icon_url=f'{ctx.message.author.avatar_url}')
        sdog.set_image(url=json['url'])
        return await ctx.send(embed=sdog)
    else:
        rdog = discord.Embed(title='Error', description='N√£o pude acessar a API', color=0xFF0000)
        rdog.set_author(name=f'{ctx.message.author.display_name}', icon_url=f'{ctx.message.author.avatar_url}')
        return await ctx.send(embed=rdog)

@bot.command(pass_context=True)
async def cat(ctx):
    '''Check out a random cute or funny cat!'''
    r = requests.get(f'https://catapi.glitch.me/random/')
    json = r.json()
    
    if r.status_code == 200:
        scat = discord.Embed(title='Gato', color=0x00FF00)
        scat.set_author(name=f'{ctx.message.author.display_name}', icon_url=f'{ctx.message.author.avatar_url}')
        scat.set_image(url=json['url'])
        scat.set_footer(text=f' {ctx.message.author}', icon_url=f'{ctx.message.author.avatar_url}')
        return await ctx.send(embed=scat)
    else:
        rcat = discord.Embed(title='Error', description='N√£o pude accessar a API', color=0xFF0000)
        rcat.set_author(name=f'{ctx.message.author.display_name}', icon_url=f'{ctx.message.author.avatar_url}')
        return await ctx.send(embed=rcat)						
                            
bot.run(str(os.environ.get('BOT_TOKEN'))
